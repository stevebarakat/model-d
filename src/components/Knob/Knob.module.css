/* CSS Custom Properties */
:root {
  --knob-container-multiplier: 1.75;
  --knob-border-radius: 50%;
  --knob-shadow-color: hsl(0deg 0% 0%);
  --knob-highlight-color: hsl(0deg 0% 100% / 50%);
  --knob-tick-color: hsl(0deg 0% 60%);
  --knob-dot-color: hsl(0deg 0% 75%);
  --knob-dot-gradient-start: hsl(220deg 13% 85%);
  --knob-dot-gradient-end: hsl(220deg 13% 55%);

  /* Conic gradient colors for knob surfaces */
  --knob-surface-light: hsl(0deg 0% 90%);
  --knob-surface-white: hsl(0deg 0% 100%);
  --knob-surface-dark: hsl(0deg 0% 30%);
  --knob-surface-medium: hsl(0deg 0% 80%);
  --knob-surface-gray: hsl(0deg 0% 50%);
  --metal-cap: conic-gradient(
    var(--knob-surface-light),
    var(--knob-surface-white),
    var(--knob-surface-dark),
    var(--knob-surface-medium),
    var(--knob-surface-gray),
    var(--knob-surface-light),
    var(--knob-surface-white),
    var(--knob-surface-dark),
    var(--knob-surface-medium),
    var(--knob-surface-gray),
    var(--knob-surface-light)
  );

  /* Common positioning values */
  --center-transform: translate(-50%, -50%);
  --dot-transform: translate(-50%, -100%);

  /* Common sizing values */
  --dot-size-small: 3px;
  --dot-size-large: 10px;
  --tick-width: 1px;
  --tick-height: 6px;
  --svg-icon-size: 8px;
}

/* Base container styles */
.knobContainer {
  position: relative;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;

  &.disabled {
    opacity: 0.5;
    pointer-events: none;
  }
}

/* Container size variants */
.knobContainerSmall {
  --knob-size: 2rem;
  --tick-offset: 1.25rem;
}

.knobContainerMedium {
  --knob-size: 2.5rem;
  --tick-offset: 1.5rem;
}

.knobContainerLarge {
  --knob-size: 3rem;
  --tick-offset: 1.75rem;
}

/* Common container sizing */
.knobContainerSmall,
.knobContainerMedium,
.knobContainerLarge {
  width: calc(var(--knob-size) * var(--knob-container-multiplier));
  height: calc(var(--knob-size) * var(--knob-container-multiplier));
}

/* Knob ring background */
.knobRing {
  position: absolute;
  top: 50%;
  left: 50%;
  z-index: 0;
  width: var(--knob-size);
  height: var(--knob-size);
  background: linear-gradient(
    to bottom,
    hsl(0deg 0% 35%) 0%,
    hsl(0deg 0% 12.5%) 35%,
    hsl(0deg 0% 5%) 35%,
    hsl(0deg 0% 10%) 100%
  );
  border-radius: var(--knob-border-radius);
  transform: var(--center-transform);
  filter: drop-shadow(0 -1px var(--knob-shadow-color));
}

/* Base knob styles */
.knob {
  position: relative;
  width: var(--knob-size);
  height: var(--knob-size);
  border-radius: var(--knob-border-radius);
}

.knobBtm {
  position: relative;
  top: 0;
  left: 0;
  width: var(--knob-size);
  height: var(--knob-size);
  filter: drop-shadow(0 -1px 0 var(--knob-highlight-color));
}

/* Common knob type styles */
.radial,
.arrow {
  position: absolute;
  top: 0;
  left: 0;
  z-index: 5;
  display: grid;
  width: 100%;
  height: 100%;
  border-radius: var(--knob-border-radius);
  cursor: pointer;
  place-items: center;
}

.dot {
  position: absolute;
  top: 50%;
  left: 50%;
  z-index: 5;
  width: var(--dot-size-small);
  height: var(--dot-size-small);
  background: linear-gradient(
    to bottom,
    var(--knob-dot-gradient-start),
    var(--knob-dot-gradient-end)
  );
  border-radius: var(--knob-border-radius);
  transform: var(--dot-transform);
  content: "";
}

/* Radial knob specific styles */
.radial {
  top: 7.5%;
  scale: 0.95;
  background: url("./images/knob.svg") no-repeat center center;

  &::before {
    position: absolute;
    top: 15%;
    left: 15%;
    z-index: -1;
    width: 70%;
    height: 70%;
    background-image: var(--metal-cap);
    border-radius: var(--knob-border-radius);
    content: "";
  }

  .dot {
    top: 12.5%;
    border-radius: var(--knob-border-radius);
    transform: var(--dot-transform);
    content: "";
  }
}

/* Arrow knob specific styles */
.arrow {
  scale: 1.05;
  background: url("./images/arrow-knob.svg") no-repeat center center;

  &::before {
    position: absolute;
    z-index: -1;
    width: 35%;
    height: 35%;
    background-image: var(--metal-cap);
    border-radius: var(--knob-border-radius);
    content: "";
  }

  .dot {
    top: 25%;
    height: var(--dot-size-large);
    width: var(--tick-width);
    border-radius: var(--tick-width);
    transform: var(--dot-transform);
    content: "";
  }
}

/* Label styles */
.title,
.label {
  position: absolute;
  bottom: 100%;
  display: inline-block;
  font-weight: 800;
  text-align: center;
  text-transform: uppercase;
  user-select: none;
}

.titleMedium,
.labelMedium {
  font-size: var(--font-size-sm);
  white-space: nowrap;
  bottom: 100%;
}

.labelLarge,
.titleLarge {
  font-size: var(--font-size-md);
  bottom: 100%;
}

/* Screen reader only label */
.labelHidden {
  position: absolute;
  width: 1px;
  height: 1px;
  overflow: hidden;
  white-space: nowrap;
  clip: rect(0 0 0 0);
  clip-path: inset(50%);
}

/* Value label */
.valueLabel {
  position: absolute;
  top: 50%;
  left: 50%;
  font-size: var(--font-size-xs);
  font-weight: 700;
  text-align: center;
  text-transform: uppercase;
  white-space: nowrap;
  transform: var(--center-transform);
  user-select: none;
  pointer-events: none;

  svg {
    width: var(--svg-icon-size);
    height: var(--svg-icon-size);
  }
}

/* Range input styles */
.rangeInput {
  position: absolute;
  width: var(--knob-size);
  appearance: none;
  background: transparent;
  cursor: pointer;
  opacity: 0;
}

/* Range input track styles */
.rangeInput::-webkit-slider-runnable-track,
.rangeInput::-moz-range-track {
  appearance: none;
  width: 100%;
  height: 100%;
  background: transparent;
  border: none;
  cursor: pointer;
}

/* Range input thumb styles */
.rangeInput::-webkit-slider-thumb,
.rangeInput::-moz-range-thumb {
  appearance: none;
  width: 100%;
  height: 100%;
  background: transparent;
  border: none;
  cursor: pointer;
}

/* Knob tick indicator */
.knobTick {
  position: absolute;
  top: 42.5%;
  left: 50%;
  z-index: 3;
  width: var(--tick-width);
  height: var(--tick-height);
  background: var(--knob-tick-color);
  border-radius: var(--tick-width);
  transform: var(--center-transform);
}
